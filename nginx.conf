events {}

http {
    server {
        listen 80;
        server_name localhost;

        # Increase client body size to allow large file uploads if needed
        client_max_body_size 100M;

        # Route requests starting with /api/ to your Netguard application
        location /api/ {
            # Rewrite the URL to remove the /api prefix before passing it to the app
            rewrite ^/api/(.*)$ /$1 break;
            
            # The netguard_app is in host mode, so we use host.docker.internal
            # to proxy requests to port 8080 on the Docker host machine.
            proxy_pass http://host.docker.internal:8080;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # These headers are crucial for WebSocket support (for your live cockpit)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Route all other requests (the root URL) to Kibana
        location / {
            # Kibana is on the 'netguard-net' docker network,
            # so Nginx can reach it using its service name 'kibana'.
            proxy_pass http://kibana:5601;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}